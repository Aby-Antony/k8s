Install Dependencies
Install the container runtime, Docker in this case:

===========================================================

sudo apt install -y docker.io

Minikube installation:
======================
Install Minikube
Retrieve and then install the Minikube deb package:

>>>>> curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_1.4.0.deb
>>>>>sudo dpkg -i minikube_1.4.0.deb
Once this is installed, set the default driver to none:

>>>>> sudo minikube config set vm-driver none
Now start Minikube


>>>>> sudo minikube start


Enable Users to Manage Environments
For the developers to manage their own environments, they need to own certain directories. Let's give them ownership with this:

>>>>> sudo chown -R $USER $HOME/.kube $HOME/.minikube


Install kubectl
====================
In order to create a deployment we will need to install kubectl:

>>>>> curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl

Now we'll have a kubectl file sitting in our directory (ls will show it) that we have to execute. Make it executable first, then move it to one of the directories where other executables are stored (/usr/local/bin in this case):

>>>>> chmod +x ./kubectl
>>>>> sudo mv ./kubectl /usr/local/bin/kubectl
Now we want to make sure that we can see our Minikube setup and our Kubernetes cluster using kubectl:

>>>>>sudo kubectl get po -A

Create and Expose a Deployment
Create a deployment, in this case Nginx:

>>>>> sudo kubectl create deployment --image nginx my-nginx

To access the deployment we will need to expose it:

>>>>> sudo kubectl expose deployment my-nginx --port=80 --type=NodePort

Once this is done, we need to determine where to access the Nginx default page:

>>>>> sudo minikube service list
Once we have the output of this command, we'll aim a curl command at the Nginx service on the service IP and port that the service has mapped to. Look for the row in the output of that last command that has our my-nginx as a NAME. There's a local IP and port in the TARGET PORT column. Our next command will look something like this:

curl http://<LOCAL_IP>:<PORT>





